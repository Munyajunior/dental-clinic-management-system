[project]
name = "hospital-management-system"
version = "0.1.0"
description = "A comprehensive hospital management system with AI capabilities"
readme = "README.md"
requires-python = ">=3.13"

# Application dependencies (what your backend needs to run)
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn>=0.35.0",
    "pydantic>=2.11.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.30.0",
    "alembic>=1.16.0",
    "psycopg2-binary>=2.9.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.20",
    "python-jose>=3.5.0",
    "passlib[argon2]>=1.7.0",
    "bcrypt>=4.0.0",
    "cryptography>=45.0.0",
    "requests>=2.32.0",
    "httpx>=0.28.0",
    "aiohttp>=3.12.0",
    "aiofiles>=24.1.0",
    "redis>=6.2.0",
    "pandas>=2.3.0",
    "scikit-learn>=1.7.0",
    "statsmodels>=0.14.0",
    "openai>=1.92.0",
    "transformers>=4.53.0",
    "twilio>=9.6.0",
    "fpdf>=1.7.0",
    "qasync>=0.27.0",
    "rich>=14.0.0",
    "fastapi-cache2>=0.2.0",
    "slowapi>=0.1.9",
    "email-validator>=2.3.0",
    "psutil>=7.0.0",
    "websockets>=15.0.1",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "mypy>=1.0.0",
    "ruff>=0.3.0",
    "pydantic-settings>=2.0.0",
    "watchfiles>=1.1.0",
]

# Application configuration
[tool.hospital-system]
database-url = "postgresql+asyncpg://user:password@localhost/hospital_db"
debug = true
host = "0.0.0.0"
port = 8000

# Python path configuration to recognize your src structure
[tool.pyright]
include = ["src"]
extraPaths = ["src"]
